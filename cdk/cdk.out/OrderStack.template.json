{
 "Resources": {
  "OrdersTable315BB997": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "orderId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "orderId",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrdersTable/Resource"
   }
  },
  "OrdersTableParam6919E2A4": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/orders/tableName",
    "Type": "String",
    "Value": {
     "Ref": "OrdersTable315BB997"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrdersTableParam/Resource"
   }
  },
  "OrderLambdaServiceRoleD5490479": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderLambda/ServiceRole/Resource"
   }
  },
  "OrderLambdaServiceRoleDefaultPolicyB925A13D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "OrdersTable315BB997",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "ssm:GetParameter",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ssm:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/orders/tableName"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "OrderLambdaServiceRoleDefaultPolicyB925A13D",
    "Roles": [
     {
      "Ref": "OrderLambdaServiceRoleD5490479"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "OrderLambda008D7AE5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "235f6da1bd960734e5b23c2d28b5c13166aec33d87289474f4acb73155f5b551.zip"
    },
    "Environment": {
     "Variables": {
      "SSM_PARAM": "/orders/tableName"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "OrderLambdaServiceRoleD5490479",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "OrderLambdaServiceRoleDefaultPolicyB925A13D",
    "OrderLambdaServiceRoleD5490479"
   ],
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderLambda/Resource",
    "aws:asset:path": "asset.235f6da1bd960734e5b23c2d28b5c13166aec33d87289474f4acb73155f5b551",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "OrderApiD39141ED": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Order Service"
   },
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderApi/Resource"
   }
  },
  "OrderApiCloudWatchRoleB19986D5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderApi/CloudWatchRole/Resource"
   }
  },
  "OrderApiAccountDFC9E69A": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "OrderApiCloudWatchRoleB19986D5",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "OrderApiD39141ED"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderApi/Account"
   }
  },
  "OrderApiDeployment0455804D891c96186b9f716b6e477629505d6565": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "OrderApiD39141ED"
    }
   },
   "DependsOn": [
    "OrderApiorderGET44F6AEA6",
    "OrderApiorderPOST0C4B8066",
    "OrderApiorder2BD86C91"
   ],
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderApi/Deployment/Resource"
   }
  },
  "OrderApiDeploymentStageprod896808D5": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "OrderApiDeployment0455804D891c96186b9f716b6e477629505d6565"
    },
    "RestApiId": {
     "Ref": "OrderApiD39141ED"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "OrderApiAccountDFC9E69A"
   ],
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderApi/DeploymentStage.prod/Resource"
   }
  },
  "OrderApiorder2BD86C91": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "OrderApiD39141ED",
      "RootResourceId"
     ]
    },
    "PathPart": "order",
    "RestApiId": {
     "Ref": "OrderApiD39141ED"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderApi/Default/order/Resource"
   }
  },
  "OrderApiorderGETApiPermissionOrderStackOrderApiB0666B8EGETorder97F03C26": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrderLambda008D7AE5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OrderApiD39141ED"
       },
       "/",
       {
        "Ref": "OrderApiDeploymentStageprod896808D5"
       },
       "/GET/order"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderApi/Default/order/GET/ApiPermission.OrderStackOrderApiB0666B8E.GET..order"
   }
  },
  "OrderApiorderGETApiPermissionTestOrderStackOrderApiB0666B8EGETorderB56BB0BA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrderLambda008D7AE5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OrderApiD39141ED"
       },
       "/test-invoke-stage/GET/order"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderApi/Default/order/GET/ApiPermission.Test.OrderStackOrderApiB0666B8E.GET..order"
   }
  },
  "OrderApiorderGET44F6AEA6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "OrderLambda008D7AE5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "OrderApiorder2BD86C91"
    },
    "RestApiId": {
     "Ref": "OrderApiD39141ED"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderApi/Default/order/GET/Resource"
   }
  },
  "OrderApiorderPOSTApiPermissionOrderStackOrderApiB0666B8EPOSTorder3E0DE7E8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrderLambda008D7AE5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OrderApiD39141ED"
       },
       "/",
       {
        "Ref": "OrderApiDeploymentStageprod896808D5"
       },
       "/POST/order"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderApi/Default/order/POST/ApiPermission.OrderStackOrderApiB0666B8E.POST..order"
   }
  },
  "OrderApiorderPOSTApiPermissionTestOrderStackOrderApiB0666B8EPOSTorder58EE19E9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrderLambda008D7AE5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OrderApiD39141ED"
       },
       "/test-invoke-stage/POST/order"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderApi/Default/order/POST/ApiPermission.Test.OrderStackOrderApiB0666B8E.POST..order"
   }
  },
  "OrderApiorderPOST0C4B8066": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "OrderLambda008D7AE5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "OrderApiorder2BD86C91"
    },
    "RestApiId": {
     "Ref": "OrderApiD39141ED"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OrderStack/OrderApi/Default/order/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQT0/DMAzFP8vuWdifA+K4De2GqDruk5t4xVuTVLVDVVX97igpsHHy79kvz1Y2er1+0asF9Lw09rZsqNLjScDcFPR8Hu3gwQVb6fEDqgbV4eIzTIrZJWdHvi6gA4eCXRr/iUk14CoLejxGb4SCT+NHLrBzxEzBT4rA6bEM84pci9CQGbIv06R4ewZmFNa7VBRv9T6aG8oeGBW0VINgD4MeS2TZtZSz7rgzJkQv6hXbJgwOvaTugzoJ1PmAGUrkEDuDOf5X/GTO/IbyGWxqzTRNd1++MQWRr5PjPUob5d/zw8Ufgrck+Qt8sKiv/PS12ej1s14trky07KIXcqjLuX4DXuFHlLEBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "OrderStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "OrderApiEndpoint315A9F2C": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "OrderApiD39141ED"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "OrderApiDeploymentStageprod896808D5"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}